# Generated by Django 5.0.9 on 2025-07-14 13:02

import django.db.models.deletion
import uuid
import voice_picker.models.uploaded_file
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('member_management', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='コード')),
                ('value', models.TextField(blank=True, null=True, verbose_name='値')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='削除日時')),
                ('exist', models.BooleanField(default=True, verbose_name='存在')),
            ],
            options={
                'verbose_name': 'environment',
                'verbose_name_plural': 'environments',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to=voice_picker.models.uploaded_file.organization_upload_to, verbose_name='ファイル')),
                ('status', models.IntegerField(choices=[(0, '未処理'), (1, '処理中'), (2, '処理済み'), (3, 'エラー')], default=0, verbose_name='ステータス')),
                ('duration', models.FloatField(blank=True, null=True, verbose_name='再生時間（秒）')),
                ('summarization', models.TextField(blank=True, null=True, verbose_name='文書要約結果')),
                ('issue', models.TextField(blank=True, null=True, verbose_name='課題点')),
                ('solution', models.TextField(blank=True, null=True, verbose_name='取り組み案')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='削除日時')),
                ('exist', models.BooleanField(default=True, verbose_name='存在')),
                ('hls_playlist_path', models.CharField(blank=True, max_length=500, null=True, verbose_name='HLSプレイリストパス')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_files', to='member_management.organization', verbose_name='組織')),
            ],
            options={
                'verbose_name': 'アップロードファイル',
                'verbose_name_plural': 'アップロードファイル',
            },
        ),
        migrations.CreateModel(
            name='Transcription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_time', models.IntegerField(verbose_name='開始時間（秒）')),
                ('text', models.TextField(verbose_name='文字起こしテキスト')),
                ('speaker', models.CharField(max_length=100, null=True, verbose_name='話者')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='削除日時')),
                ('exist', models.BooleanField(default=True, verbose_name='存在')),
                ('uploaded_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transcription', to='voice_picker.uploadedfile', verbose_name='アップロードファイル')),
            ],
            options={
                'verbose_name': '文字起こしテキスト',
                'verbose_name_plural': '文字起こしテキスト',
            },
        ),
        migrations.CreateModel(
            name='MeetingRecording',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('meeting_url', models.URLField(max_length=500, verbose_name='会議URL')),
                ('meeting_title', models.CharField(blank=True, max_length=200, null=True, verbose_name='会議タイトル')),
                ('scheduled_start_time', models.DateTimeField(verbose_name='開始予定時刻')),
                ('actual_start_time', models.DateTimeField(blank=True, null=True, verbose_name='実際の開始時刻')),
                ('actual_end_time', models.DateTimeField(blank=True, null=True, verbose_name='実際の終了時刻')),
                ('status', models.IntegerField(choices=[(0, '待機中'), (1, '録画中'), (2, '録画完了'), (3, '録画失敗')], default=0, verbose_name='録画状態')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='エラーメッセージ')),
                ('recording_config', models.JSONField(blank=True, default=dict, verbose_name='録画設定')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='削除日時')),
                ('exist', models.BooleanField(default=True, verbose_name='存在')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meeting_recordings', to='member_management.organization', verbose_name='組織')),
                ('uploaded_file', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='meeting_recording', to='voice_picker.uploadedfile', verbose_name='録画ファイル')),
            ],
            options={
                'verbose_name': '会議録画',
                'verbose_name_plural': '会議録画',
                'ordering': ['-scheduled_start_time'],
            },
        ),
    ]
